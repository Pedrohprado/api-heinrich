generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// enum Lateralidade {
//     direita
//     esquerda
//     ambas
// }

// enum UnidadeDeAtendimento {
//     ambulatorio
//     prontoSocorro
//     unimed
//     especialista
// }

enum ROLE {
    ADMIN
    STAFFAMBULATORY
    STAFFTST
    USER
}

model Register {
    id                       Int       @id @default(autoincrement())
    createdById              Int
    nome                     String
    cartao                   String
    setor                    String
    liderResponsavel         String
    descricao                String
    cliente                  String?
    produto                  String?
    nivelDoOcorrido          String //possivel nivel do ocorrido no front-end(conforme vai passando por validação, vai alterando o nivel)
    createdAt                DateTime  @default(now())
    updatedAt                DateTime  @updatedAt
    //dadas para alimentar no ambulatorio
    dataEntradaNoAmbulatorio DateTime?
    enfermeiroResponsavel    String?
    parteDoCorpoAtingida     String? //vai ter que receber um enum
    lateralidadeDoCorpo      String? //vai ter que receber um enum
    NaturezaDaLesao          String? //vai ter que receber um enum
    cid                      String? //codigo de atestado possívelmente
    diasDeAtestado           Int?
    diasDeAfastamentoReal    Int?
    unidadeDeAtendimento     String? //tem que receber um enum
    descricaoDoAcidente      String? //conforme a vitima
    dataValidacaoAmbulatorio DateTime?
    validadorAmbulatorioId   Int?

    //dados para alimentar no TST
    probabilidade      Int?
    gravidade          Int?
    fatorRiscoAcidente Int? //P x G
    dataValidacaoTST   DateTime?
    validadorTSTId     Int?

    validadorAmbulatorio User? @relation("ValidadorAmbulatorio", fields: [validadorAmbulatorioId], references: [id])
    validadorTST         User? @relation("ValidadorTST", fields: [validadorTSTId], references: [id])
    User                 User  @relation(fields: [createdById], references: [id])
}

model User {
    id                   Int        @id @default(autoincrement())
    nome                 String     @unique
    cartao               String     @unique
    setor                String
    passwordHash         String
    role                 ROLE
    createdAt            DateTime   @default(now())
    updatedAt            DateTime   @updatedAt
    Register             Register[]
    registrosAmbulatorio Register[] @relation("ValidadorAmbulatorio")
    registrosTST         Register[] @relation("ValidadorTST")
}
